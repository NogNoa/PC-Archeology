Line_pix = 320
line_byte = Line_pix // 4 = 80
col = size(file) / line_byte 

image[Line_pix, size(file) // line_byte + 2]

line_pix * (size(file) // line_byte + 2) =
line_pix * (size(file) // (Line_pix // 4)+ 2) =
size(file) // (1 // 4) + 2 * line_pix =
size(file) * 4 + 2 * line_pix

interlaced
field_byte_i = file_byte_i % field_sz
y = 2 * ( field_byte_i // line_sz) + field_i
field_sz = file_sz // 2
file_byte_i = field_byte_i + field_i * (file_sz // 2)
file_byte_i - field_byte_i = field_i * (file_sz // 2)
(file_byte_i - field_byte_i)/ (file_sz // 2) = field_i
y = 2 * ( field_byte_i // line_sz) + (file_byte_i - field_byte_i)/ (file_sz // 2)

y = 2 * ( (file_byte_i % field_sz) // line_sz) + field_i
y = 2 * ( (file_byte_i % (file_sz // 2)) // line_sz) + field_i
y = 2 * ( ((field_byte_i + field_i * (file_sz // 2)) % (file_sz // 2)) // line_sz) + field_i

progressive:
field_byte_i = file_byte_i
y = field_byte_i // line_sz

file = row[*]
letter = row[0x20]
letter = byte[8]
byte = row[4]

file = byte[0x400]

    for byte_i, byte in enumerate(call):
        letter_i = byte_i // 8
        y = byte_i % 8
        col = (letter_i) % 0x20
        row = (letter_i) // 0x20

file = field[2]         {field_sz = len(call) // 2}
field = byte[field_sz]  {field_i = byte_i // field_sz}
line = byte[line_sz]    {y = byte_i // line_sz}
byte = pixel[4]         {x = 4 * (byte_i % line_sz)  + pixel_i}

